#! /usr/bin/env python

import os, sys

from pida.utils.pdbus import BUS_NAME, DBUS_NS, DBUS_PATH_PREFIX, \
                            list_pida_instances, PidaRemote
import dbus
import dbus.service
import re

session = dbus.SessionBus()

# check if pida is running
lst = list_pida_instances()

file_name = os.path.abspath(sys.argv[-1])

def call_open(pid):
    pr = PidaRemote(pid)
    pr.call_async('buffer', 'open_file', file_name)
    sys.exit(0)
    
# FIXME: this is ugly. there should be a function in the core to spawn
# a new process
def spawn():
    import subprocess
    nargs = ['python', sys.argv[0].replace('-remote',''),] + sys.argv[1:]

    subprocess.Popen(nargs, env=os.environ.copy()).pid
    sys.exit(0)


if len(lst) == 0:
    spawn()
    
else:
    from pida.ui.window import SessionWindow
    import gtk
    #from kiwi.ui.delegates import GladeSlaveDelegate
    
    command = (('buffer', 'open_file', file_name), {})
    
    view = SessionWindow(fire_command=command, spawn_new=spawn)
    view.show_all()
    gtk.main()
    sys.exit(0)

